#define _CRT_SECURE_NO_WARNINGS 
#include<stdio.h>
int main()
{
	int n = 0;
	int i = 0;
	int ret = 1;
	printf("请输入n的值,来计算n的阶乘\n");
	scanf("%d", &n);//放不下了就溢出了，结果为0
	if (n == 0)
	{
		printf("n=0时，n的阶层为0\n");
	}
	else
	{
		for ( i = 1;i<=n;i++)
		{ 
			ret = ret*i;
		}
		printf("n的阶乘=%d", ret);
		
	}
}
//for循环计算阶乘




#define _CRT_SECURE_NO_WARNINGS 
#include<stdio.h>
int main()
{
	int n = 0;
	int i = 0;
	int ret = 1;
	int sum = 0;
	for (n = 1; n <= 10;n++)
	{
		ret = ret*n;
		sum = sum + ret;
			
	}
	printf("%d", sum);	
}
// 打印     1!+2!+3!+....+10！=？     4037913



#define _CRT_SECURE_NO_WARNINGS 
#include<stdio.h>
int main()
{
	int arr[] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
	int k = 11;
	int i = 0;
	int sz = sizeof(arr) / sizeof(arr[0]);
	for (i = 0; i < sz; i++)
	{
		if (k == arr[i])
		{
			printf("找到了，下标是%d\n", i);
			break;
		}
	}
	if (i == sz)
		printf("找不到\n");
	return 0;
}
// 寻找数组下标（低效，没有使用二分法）




#define _CRT_SECURE_NO_WARNINGS 
#include<stdio.h>
int main()
{
	int k = 11;
	int arr[] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
	int sz = sizeof(arr) / sizeof(arr[0]);//元素个数
	int left = 0;//左下标
	int right = 9;//右下标
	while (left <= right)
	{

		int mid = (left + right) / 2;
		if (arr[mid] > k)
		{
			right = mid - 1;
		}
		else if (arr[mid] < k)
		{
			left = mid + 1;
		}
		else
		{
			printf("找到了，下标是%d\n", mid);//当目标数字==k时
			break;                              //这个过程中mid就是对应数字的下标。
		}
		if (left>right)
		{
			printf("找不到了\n");
		}
	}
	return 0;
}
//寻找一个有序数组中具体某个数字。如果找得到，显示下标；找不到，结果就是找不到了



//任务：逐渐显示 weicome to bit!!!!!!!，####################从两边向中间渐变。
#define _CRT_SECURE_NO_WARNINGS 
#include<stdio.h>
#include<windows.h>
#include<stdlib.h>

int main()
{
	char arr1[] = "welcome to bit !!!!!!!";
	char arr2[] = "######################";
	int left = 0;
	int right = sizeof(arr1) / sizeof(arr1[0]) - 2;
	//  strlen(arr1)-1;也行,需 #include<string.h>
	while (left <= right)
	{
		arr2[left] = arr1[left];
		arr2[right] = arr1[right];
        printf("%s\n", arr2);
		Sleep(200);
		system("cls");//执行系统命令的一个函数：cls-清空屏幕。
		left++;
		right--;
	}
	return 0;
}



//任务：登录 输入密码，最多错3次。3次以内，对了，就成功
#define _CRT_SECURE_NO_WARNINGS 
#include<stdio.h>
#include<windows.h>
#include<stdlib.h>



int main()
{
	int i = 0;
	char password[] = { 0 };
	for (i = 0; i <3; i++)
	{
		printf("请输入密码:>");
		scanf("%s", password);
		if (strcmp(password, "123456")==0)
		{
			printf("登陆成功\n");
			break;
		}
		else
		{
			printf("密码错误，请重试\n");
		}
		
	}
	if (i == 3);
	printf("三次密码均错误，请退出程序");

	
	return 0;
}
